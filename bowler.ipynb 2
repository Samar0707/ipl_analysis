{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "584ea81c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4dc3ef9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "deliveries = pd.read_csv('deliveries.csv')\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9ee94910",
   "metadata": {},
   "outputs": [],
   "source": [
    "matches = pd.read_csv('matches.csv')\n",
    "pd.set_option('display.max_columns', None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "201e5474",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>batting_team</th>\n",
       "      <th>bowling_team</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>batsman</th>\n",
       "      <th>non_striker</th>\n",
       "      <th>bowler</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>player_dismissed</th>\n",
       "      <th>dismissal_kind</th>\n",
       "      <th>fielder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179073</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179074</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179075</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>run out</td>\n",
       "      <td>KH Pandya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179076</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179077</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>lbw</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>179078 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        match_id  inning         batting_team                 bowling_team  \\\n",
       "0              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "1              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "2              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "3              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "4              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "...          ...     ...                  ...                          ...   \n",
       "179073     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179074     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179075     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179076     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179077     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "\n",
       "        over  ball    batsman non_striker      bowler  is_super_over  \\\n",
       "0          1     1  DA Warner    S Dhawan    TS Mills              0   \n",
       "1          1     2  DA Warner    S Dhawan    TS Mills              0   \n",
       "2          1     3  DA Warner    S Dhawan    TS Mills              0   \n",
       "3          1     4  DA Warner    S Dhawan    TS Mills              0   \n",
       "4          1     5  DA Warner    S Dhawan    TS Mills              0   \n",
       "...      ...   ...        ...         ...         ...            ...   \n",
       "179073    20     2  RA Jadeja   SR Watson  SL Malinga              0   \n",
       "179074    20     3  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179075    20     4  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179076    20     5  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "179077    20     6  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "\n",
       "        wide_runs  bye_runs  legbye_runs  noball_runs  penalty_runs  \\\n",
       "0               0         0            0            0             0   \n",
       "1               0         0            0            0             0   \n",
       "2               0         0            0            0             0   \n",
       "3               0         0            0            0             0   \n",
       "4               2         0            0            0             0   \n",
       "...           ...       ...          ...          ...           ...   \n",
       "179073          0         0            0            0             0   \n",
       "179074          0         0            0            0             0   \n",
       "179075          0         0            0            0             0   \n",
       "179076          0         0            0            0             0   \n",
       "179077          0         0            0            0             0   \n",
       "\n",
       "        batsman_runs  extra_runs  total_runs player_dismissed dismissal_kind  \\\n",
       "0                  0           0           0              NaN            NaN   \n",
       "1                  0           0           0              NaN            NaN   \n",
       "2                  4           0           4              NaN            NaN   \n",
       "3                  0           0           0              NaN            NaN   \n",
       "4                  0           2           2              NaN            NaN   \n",
       "...              ...         ...         ...              ...            ...   \n",
       "179073             1           0           1              NaN            NaN   \n",
       "179074             2           0           2              NaN            NaN   \n",
       "179075             1           0           1        SR Watson        run out   \n",
       "179076             2           0           2              NaN            NaN   \n",
       "179077             0           0           0        SN Thakur            lbw   \n",
       "\n",
       "          fielder  \n",
       "0             NaN  \n",
       "1             NaN  \n",
       "2             NaN  \n",
       "3             NaN  \n",
       "4             NaN  \n",
       "...           ...  \n",
       "179073        NaN  \n",
       "179074        NaN  \n",
       "179075  KH Pandya  \n",
       "179076        NaN  \n",
       "179077        NaN  \n",
       "\n",
       "[179078 rows x 21 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "deliveries"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "126ed40d",
   "metadata": {},
   "source": [
    "# innings played by bowler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "da36acc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "innings_played=deliveries.groupby(['bowler'])['match_id'].nunique().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6d9a12f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "innings_played.rename(columns = {'match_id':'total_innings'}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f3b5b27b",
   "metadata": {},
   "outputs": [],
   "source": [
    "innings_played=innings_played[innings_played['total_innings']>20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "56b7ea0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "innings_played=innings_played.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ad97a137",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>total_innings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Kumble</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Nehra</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A Symonds</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>WD Parnell</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>YK Pathan</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>YS Chahal</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Yuvraj Singh</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>Z Khan</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           bowler  total_innings\n",
       "0        A Kumble             42\n",
       "1        A Mishra            147\n",
       "2         A Nehra             88\n",
       "3         A Singh             26\n",
       "4       A Symonds             30\n",
       "..            ...            ...\n",
       "120    WD Parnell             26\n",
       "121     YK Pathan             82\n",
       "122     YS Chahal             83\n",
       "123  Yuvraj Singh             73\n",
       "124        Z Khan             99\n",
       "\n",
       "[125 rows x 2 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "innings_played"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "156f3237",
   "metadata": {},
   "source": [
    "# Economy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ec310489",
   "metadata": {},
   "outputs": [],
   "source": [
    "runs=deliveries.groupby(['bowler'])['total_runs'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5c6f7ac1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>total_runs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Ashish Reddy</td>\n",
       "      <td>400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Chandila</td>\n",
       "      <td>245</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Choudhary</td>\n",
       "      <td>144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Dananjaya</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A Flintoff</td>\n",
       "      <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400</th>\n",
       "      <td>YA Abdulla</td>\n",
       "      <td>311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>YK Pathan</td>\n",
       "      <td>1443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>402</th>\n",
       "      <td>YS Chahal</td>\n",
       "      <td>2416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403</th>\n",
       "      <td>Yuvraj Singh</td>\n",
       "      <td>1092</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>Z Khan</td>\n",
       "      <td>2860</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>405 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             bowler  total_runs\n",
       "0    A Ashish Reddy         400\n",
       "1        A Chandila         245\n",
       "2       A Choudhary         144\n",
       "3       A Dananjaya          48\n",
       "4        A Flintoff         106\n",
       "..              ...         ...\n",
       "400      YA Abdulla         311\n",
       "401       YK Pathan        1443\n",
       "402       YS Chahal        2416\n",
       "403    Yuvraj Singh        1092\n",
       "404          Z Khan        2860\n",
       "\n",
       "[405 rows x 2 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "runs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "24e0a722",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = pd.merge(runs,innings_played,on=['bowler'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6fe736f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Kumble</td>\n",
       "      <td>1089</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>3850</td>\n",
       "      <td>147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Nehra</td>\n",
       "      <td>2537</td>\n",
       "      <td>88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>769</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A Symonds</td>\n",
       "      <td>694</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>WD Parnell</td>\n",
       "      <td>731</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>YK Pathan</td>\n",
       "      <td>1443</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>YS Chahal</td>\n",
       "      <td>2416</td>\n",
       "      <td>83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Yuvraj Singh</td>\n",
       "      <td>1092</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>Z Khan</td>\n",
       "      <td>2860</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           bowler  total_runs  total_innings\n",
       "0        A Kumble        1089             42\n",
       "1        A Mishra        3850            147\n",
       "2         A Nehra        2537             88\n",
       "3         A Singh         769             26\n",
       "4       A Symonds         694             30\n",
       "..            ...         ...            ...\n",
       "120    WD Parnell         731             26\n",
       "121     YK Pathan        1443             82\n",
       "122     YS Chahal        2416             83\n",
       "123  Yuvraj Singh        1092             73\n",
       "124        Z Khan        2860             99\n",
       "\n",
       "[125 rows x 3 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "45e451b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df=deliveries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "cb2055ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df = new_df.drop(new_df[new_df.ball >= 7].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d8281c51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>batting_team</th>\n",
       "      <th>bowling_team</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>batsman</th>\n",
       "      <th>non_striker</th>\n",
       "      <th>bowler</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>player_dismissed</th>\n",
       "      <th>dismissal_kind</th>\n",
       "      <th>fielder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179073</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179074</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179075</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>run out</td>\n",
       "      <td>KH Pandya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179076</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179077</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>lbw</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>173048 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        match_id  inning         batting_team                 bowling_team  \\\n",
       "0              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "1              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "2              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "3              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "4              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "...          ...     ...                  ...                          ...   \n",
       "179073     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179074     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179075     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179076     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179077     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "\n",
       "        over  ball    batsman non_striker      bowler  is_super_over  \\\n",
       "0          1     1  DA Warner    S Dhawan    TS Mills              0   \n",
       "1          1     2  DA Warner    S Dhawan    TS Mills              0   \n",
       "2          1     3  DA Warner    S Dhawan    TS Mills              0   \n",
       "3          1     4  DA Warner    S Dhawan    TS Mills              0   \n",
       "4          1     5  DA Warner    S Dhawan    TS Mills              0   \n",
       "...      ...   ...        ...         ...         ...            ...   \n",
       "179073    20     2  RA Jadeja   SR Watson  SL Malinga              0   \n",
       "179074    20     3  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179075    20     4  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179076    20     5  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "179077    20     6  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "\n",
       "        wide_runs  bye_runs  legbye_runs  noball_runs  penalty_runs  \\\n",
       "0               0         0            0            0             0   \n",
       "1               0         0            0            0             0   \n",
       "2               0         0            0            0             0   \n",
       "3               0         0            0            0             0   \n",
       "4               2         0            0            0             0   \n",
       "...           ...       ...          ...          ...           ...   \n",
       "179073          0         0            0            0             0   \n",
       "179074          0         0            0            0             0   \n",
       "179075          0         0            0            0             0   \n",
       "179076          0         0            0            0             0   \n",
       "179077          0         0            0            0             0   \n",
       "\n",
       "        batsman_runs  extra_runs  total_runs player_dismissed dismissal_kind  \\\n",
       "0                  0           0           0              NaN            NaN   \n",
       "1                  0           0           0              NaN            NaN   \n",
       "2                  4           0           4              NaN            NaN   \n",
       "3                  0           0           0              NaN            NaN   \n",
       "4                  0           2           2              NaN            NaN   \n",
       "...              ...         ...         ...              ...            ...   \n",
       "179073             1           0           1              NaN            NaN   \n",
       "179074             2           0           2              NaN            NaN   \n",
       "179075             1           0           1        SR Watson        run out   \n",
       "179076             2           0           2              NaN            NaN   \n",
       "179077             0           0           0        SN Thakur            lbw   \n",
       "\n",
       "          fielder  \n",
       "0             NaN  \n",
       "1             NaN  \n",
       "2             NaN  \n",
       "3             NaN  \n",
       "4             NaN  \n",
       "...           ...  \n",
       "179073        NaN  \n",
       "179074        NaN  \n",
       "179075  KH Pandya  \n",
       "179076        NaN  \n",
       "179077        NaN  \n",
       "\n",
       "[173048 rows x 21 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b14b78ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "balls=new_df['bowler'].value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "61879141",
   "metadata": {},
   "outputs": [],
   "source": [
    "balls.rename(columns = {'index':'bowler', 'bowler':'total_balls'}, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "29db0053",
   "metadata": {},
   "outputs": [],
   "source": [
    "balls['overs']=balls['total_balls']/6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5b6e6147",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>total_balls</th>\n",
       "      <th>overs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harbhajan Singh</td>\n",
       "      <td>3374</td>\n",
       "      <td>562.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PP Chawla</td>\n",
       "      <td>3125</td>\n",
       "      <td>520.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>3101</td>\n",
       "      <td>516.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R Ashwin</td>\n",
       "      <td>2924</td>\n",
       "      <td>487.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2828</td>\n",
       "      <td>471.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400</th>\n",
       "      <td>SS Mundhe</td>\n",
       "      <td>6</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>LA Carseldine</td>\n",
       "      <td>6</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>402</th>\n",
       "      <td>SN Khan</td>\n",
       "      <td>2</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403</th>\n",
       "      <td>SPD Smith</td>\n",
       "      <td>2</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>AC Gilchrist</td>\n",
       "      <td>1</td>\n",
       "      <td>0.166667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>405 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              bowler  total_balls       overs\n",
       "0    Harbhajan Singh         3374  562.333333\n",
       "1          PP Chawla         3125  520.833333\n",
       "2           A Mishra         3101  516.833333\n",
       "3           R Ashwin         2924  487.333333\n",
       "4         SL Malinga         2828  471.333333\n",
       "..               ...          ...         ...\n",
       "400        SS Mundhe            6    1.000000\n",
       "401    LA Carseldine            6    1.000000\n",
       "402          SN Khan            2    0.333333\n",
       "403        SPD Smith            2    0.333333\n",
       "404     AC Gilchrist            1    0.166667\n",
       "\n",
       "[405 rows x 3 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "ee0ae1cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "balls=balls.drop(['total_balls'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2cab1093",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>overs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harbhajan Singh</td>\n",
       "      <td>562.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PP Chawla</td>\n",
       "      <td>520.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>516.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R Ashwin</td>\n",
       "      <td>487.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>471.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400</th>\n",
       "      <td>SS Mundhe</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>LA Carseldine</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>402</th>\n",
       "      <td>SN Khan</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403</th>\n",
       "      <td>SPD Smith</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>AC Gilchrist</td>\n",
       "      <td>0.166667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>405 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              bowler       overs\n",
       "0    Harbhajan Singh  562.333333\n",
       "1          PP Chawla  520.833333\n",
       "2           A Mishra  516.833333\n",
       "3           R Ashwin  487.333333\n",
       "4         SL Malinga  471.333333\n",
       "..               ...         ...\n",
       "400        SS Mundhe    1.000000\n",
       "401    LA Carseldine    1.000000\n",
       "402          SN Khan    0.333333\n",
       "403        SPD Smith    0.333333\n",
       "404     AC Gilchrist    0.166667\n",
       "\n",
       "[405 rows x 2 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "balls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bb208799",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = pd.merge(balls,final,on=['bowler'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "069de5ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>overs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harbhajan Singh</td>\n",
       "      <td>562.333333</td>\n",
       "      <td>4050</td>\n",
       "      <td>157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PP Chawla</td>\n",
       "      <td>520.833333</td>\n",
       "      <td>4153</td>\n",
       "      <td>156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>516.833333</td>\n",
       "      <td>3850</td>\n",
       "      <td>147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R Ashwin</td>\n",
       "      <td>487.333333</td>\n",
       "      <td>3391</td>\n",
       "      <td>136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>471.333333</td>\n",
       "      <td>3511</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>LR Shukla</td>\n",
       "      <td>52.666667</td>\n",
       "      <td>458</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>CJ Anderson</td>\n",
       "      <td>49.500000</td>\n",
       "      <td>532</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>ST Jayasuriya</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>396</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>TM Dilshan</td>\n",
       "      <td>45.166667</td>\n",
       "      <td>368</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>V Kohli</td>\n",
       "      <td>41.833333</td>\n",
       "      <td>371</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              bowler       overs  total_runs  total_innings\n",
       "0    Harbhajan Singh  562.333333        4050            157\n",
       "1          PP Chawla  520.833333        4153            156\n",
       "2           A Mishra  516.833333        3850            147\n",
       "3           R Ashwin  487.333333        3391            136\n",
       "4         SL Malinga  471.333333        3511            122\n",
       "..               ...         ...         ...            ...\n",
       "120        LR Shukla   52.666667         458             27\n",
       "121      CJ Anderson   49.500000         532             22\n",
       "122    ST Jayasuriya   49.000000         396             21\n",
       "123       TM Dilshan   45.166667         368             25\n",
       "124          V Kohli   41.833333         371             26\n",
       "\n",
       "[125 rows x 4 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "559d2375",
   "metadata": {},
   "outputs": [],
   "source": [
    "final['overs']=final['overs'].round(decimals=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "80d9c4db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>overs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harbhajan Singh</td>\n",
       "      <td>562.33</td>\n",
       "      <td>4050</td>\n",
       "      <td>157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>PP Chawla</td>\n",
       "      <td>520.83</td>\n",
       "      <td>4153</td>\n",
       "      <td>156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>516.83</td>\n",
       "      <td>3850</td>\n",
       "      <td>147</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R Ashwin</td>\n",
       "      <td>487.33</td>\n",
       "      <td>3391</td>\n",
       "      <td>136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>471.33</td>\n",
       "      <td>3511</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>LR Shukla</td>\n",
       "      <td>52.67</td>\n",
       "      <td>458</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>CJ Anderson</td>\n",
       "      <td>49.50</td>\n",
       "      <td>532</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>ST Jayasuriya</td>\n",
       "      <td>49.00</td>\n",
       "      <td>396</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>TM Dilshan</td>\n",
       "      <td>45.17</td>\n",
       "      <td>368</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>V Kohli</td>\n",
       "      <td>41.83</td>\n",
       "      <td>371</td>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              bowler   overs  total_runs  total_innings\n",
       "0    Harbhajan Singh  562.33        4050            157\n",
       "1          PP Chawla  520.83        4153            156\n",
       "2           A Mishra  516.83        3850            147\n",
       "3           R Ashwin  487.33        3391            136\n",
       "4         SL Malinga  471.33        3511            122\n",
       "..               ...     ...         ...            ...\n",
       "120        LR Shukla   52.67         458             27\n",
       "121      CJ Anderson   49.50         532             22\n",
       "122    ST Jayasuriya   49.00         396             21\n",
       "123       TM Dilshan   45.17         368             25\n",
       "124          V Kohli   41.83         371             26\n",
       "\n",
       "[125 rows x 4 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f3941b7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "final['Economy'] = final['total_runs']/final['overs']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "60438e3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = final.sort_values(by='Economy')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "d9534518",
   "metadata": {},
   "outputs": [],
   "source": [
    "final=final.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "f1c4c0ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "eco=final[['bowler','Economy']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "1a48e7b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "top_eco=eco.head(10)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "a49bf8c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "top_eco.index = np.arange(1, len(top_eco) + 1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "a6c080ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=final['bowler'].head()\n",
    "y=final['Economy'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c661ad25",
   "metadata": {},
   "outputs": [],
   "source": [
    "name=x.values\n",
    "count=y.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2c524085",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([0, 1, 2, 3, 4],\n",
       " [Text(0, 0, ''),\n",
       "  Text(0, 0, ''),\n",
       "  Text(0, 0, ''),\n",
       "  Text(0, 0, ''),\n",
       "  Text(0, 0, '')])"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(name,count)\n",
    "plt.xticks(rotation='vertical')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffdaec0c",
   "metadata": {},
   "source": [
    "# Wicket taking ability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b7107368",
   "metadata": {},
   "outputs": [],
   "source": [
    "deliv=deliveries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "fda3dcc1",
   "metadata": {},
   "outputs": [],
   "source": [
    "deliv['player_dismissed'] = deliv['player_dismissed'].replace(np.nan, 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "234829ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/80/x1svf9ms1zvcvb7klmk6nzlr0000gn/T/ipykernel_17775/2707305101.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  deliv.player_dismissed[deliv.player_dismissed != 0] = 1\n"
     ]
    }
   ],
   "source": [
    "deliv.player_dismissed[deliv.player_dismissed != 0] = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "dd0e0b62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>inning</th>\n",
       "      <th>batting_team</th>\n",
       "      <th>bowling_team</th>\n",
       "      <th>over</th>\n",
       "      <th>ball</th>\n",
       "      <th>batsman</th>\n",
       "      <th>non_striker</th>\n",
       "      <th>bowler</th>\n",
       "      <th>is_super_over</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>bye_runs</th>\n",
       "      <th>legbye_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>penalty_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "      <th>extra_runs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>player_dismissed</th>\n",
       "      <th>dismissal_kind</th>\n",
       "      <th>fielder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sunrisers Hyderabad</td>\n",
       "      <td>Royal Challengers Bangalore</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>DA Warner</td>\n",
       "      <td>S Dhawan</td>\n",
       "      <td>TS Mills</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179073</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179074</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>3</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179075</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>SR Watson</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>run out</td>\n",
       "      <td>KH Pandya</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179076</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>5</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179077</th>\n",
       "      <td>11415</td>\n",
       "      <td>2</td>\n",
       "      <td>Chennai Super Kings</td>\n",
       "      <td>Mumbai Indians</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>SN Thakur</td>\n",
       "      <td>RA Jadeja</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>lbw</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>179078 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        match_id  inning         batting_team                 bowling_team  \\\n",
       "0              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "1              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "2              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "3              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "4              1       1  Sunrisers Hyderabad  Royal Challengers Bangalore   \n",
       "...          ...     ...                  ...                          ...   \n",
       "179073     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179074     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179075     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179076     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "179077     11415       2  Chennai Super Kings               Mumbai Indians   \n",
       "\n",
       "        over  ball    batsman non_striker      bowler  is_super_over  \\\n",
       "0          1     1  DA Warner    S Dhawan    TS Mills              0   \n",
       "1          1     2  DA Warner    S Dhawan    TS Mills              0   \n",
       "2          1     3  DA Warner    S Dhawan    TS Mills              0   \n",
       "3          1     4  DA Warner    S Dhawan    TS Mills              0   \n",
       "4          1     5  DA Warner    S Dhawan    TS Mills              0   \n",
       "...      ...   ...        ...         ...         ...            ...   \n",
       "179073    20     2  RA Jadeja   SR Watson  SL Malinga              0   \n",
       "179074    20     3  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179075    20     4  SR Watson   RA Jadeja  SL Malinga              0   \n",
       "179076    20     5  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "179077    20     6  SN Thakur   RA Jadeja  SL Malinga              0   \n",
       "\n",
       "        wide_runs  bye_runs  legbye_runs  noball_runs  penalty_runs  \\\n",
       "0               0         0            0            0             0   \n",
       "1               0         0            0            0             0   \n",
       "2               0         0            0            0             0   \n",
       "3               0         0            0            0             0   \n",
       "4               2         0            0            0             0   \n",
       "...           ...       ...          ...          ...           ...   \n",
       "179073          0         0            0            0             0   \n",
       "179074          0         0            0            0             0   \n",
       "179075          0         0            0            0             0   \n",
       "179076          0         0            0            0             0   \n",
       "179077          0         0            0            0             0   \n",
       "\n",
       "        batsman_runs  extra_runs  total_runs player_dismissed dismissal_kind  \\\n",
       "0                  0           0           0                0            NaN   \n",
       "1                  0           0           0                0            NaN   \n",
       "2                  4           0           4                0            NaN   \n",
       "3                  0           0           0                0            NaN   \n",
       "4                  0           2           2                0            NaN   \n",
       "...              ...         ...         ...              ...            ...   \n",
       "179073             1           0           1                0            NaN   \n",
       "179074             2           0           2                0            NaN   \n",
       "179075             1           0           1                1        run out   \n",
       "179076             2           0           2                0            NaN   \n",
       "179077             0           0           0                1            lbw   \n",
       "\n",
       "          fielder  \n",
       "0             NaN  \n",
       "1             NaN  \n",
       "2             NaN  \n",
       "3             NaN  \n",
       "4             NaN  \n",
       "...           ...  \n",
       "179073        NaN  \n",
       "179074        NaN  \n",
       "179075  KH Pandya  \n",
       "179076        NaN  \n",
       "179077        NaN  \n",
       "\n",
       "[179078 rows x 21 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "deliv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "3f945fd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "wickets=deliv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "6728b4c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "wickets = wickets.drop(wickets[wickets['dismissal_kind']=='run out'].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "871d2714",
   "metadata": {},
   "outputs": [],
   "source": [
    "wick_taken=wickets.groupby(['bowler'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "44330fdf",
   "metadata": {},
   "outputs": [],
   "source": [
    "wick_taken.rename(columns={'player_dismissed':'wic_taken'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "842b725a",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = pd.merge(wick_taken,final,on=['bowler'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "d0cccc84",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>wic_taken</th>\n",
       "      <th>overs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "      <th>Economy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Kumble</td>\n",
       "      <td>45</td>\n",
       "      <td>161.00</td>\n",
       "      <td>1089</td>\n",
       "      <td>42</td>\n",
       "      <td>6.763975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>156</td>\n",
       "      <td>516.83</td>\n",
       "      <td>3850</td>\n",
       "      <td>147</td>\n",
       "      <td>7.449258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Nehra</td>\n",
       "      <td>106</td>\n",
       "      <td>318.17</td>\n",
       "      <td>2537</td>\n",
       "      <td>88</td>\n",
       "      <td>7.973725</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>31</td>\n",
       "      <td>88.83</td>\n",
       "      <td>769</td>\n",
       "      <td>26</td>\n",
       "      <td>8.656985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A Symonds</td>\n",
       "      <td>20</td>\n",
       "      <td>87.83</td>\n",
       "      <td>694</td>\n",
       "      <td>30</td>\n",
       "      <td>7.901628</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>WD Parnell</td>\n",
       "      <td>27</td>\n",
       "      <td>95.50</td>\n",
       "      <td>731</td>\n",
       "      <td>26</td>\n",
       "      <td>7.654450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>YK Pathan</td>\n",
       "      <td>42</td>\n",
       "      <td>191.17</td>\n",
       "      <td>1443</td>\n",
       "      <td>82</td>\n",
       "      <td>7.548255</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>YS Chahal</td>\n",
       "      <td>100</td>\n",
       "      <td>298.00</td>\n",
       "      <td>2416</td>\n",
       "      <td>83</td>\n",
       "      <td>8.107383</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>Yuvraj Singh</td>\n",
       "      <td>36</td>\n",
       "      <td>144.83</td>\n",
       "      <td>1092</td>\n",
       "      <td>73</td>\n",
       "      <td>7.539874</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>Z Khan</td>\n",
       "      <td>103</td>\n",
       "      <td>367.00</td>\n",
       "      <td>2860</td>\n",
       "      <td>99</td>\n",
       "      <td>7.792916</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           bowler wic_taken   overs  total_runs  total_innings   Economy\n",
       "0        A Kumble        45  161.00        1089             42  6.763975\n",
       "1        A Mishra       156  516.83        3850            147  7.449258\n",
       "2         A Nehra       106  318.17        2537             88  7.973725\n",
       "3         A Singh        31   88.83         769             26  8.656985\n",
       "4       A Symonds        20   87.83         694             30  7.901628\n",
       "..            ...       ...     ...         ...            ...       ...\n",
       "120    WD Parnell        27   95.50         731             26  7.654450\n",
       "121     YK Pathan        42  191.17        1443             82  7.548255\n",
       "122     YS Chahal       100  298.00        2416             83  8.107383\n",
       "123  Yuvraj Singh        36  144.83        1092             73  7.539874\n",
       "124        Z Khan       103  367.00        2860             99  7.792916\n",
       "\n",
       "[125 rows x 6 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b3a95f42",
   "metadata": {},
   "outputs": [],
   "source": [
    "total_ball=deliveries.bowler.value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "291baab4",
   "metadata": {},
   "outputs": [],
   "source": [
    "total_ball.rename(columns={'index':'bowler','bowler':'tot_balls'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "2f9f6a21",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = pd.merge(total_ball,final,on=['bowler'])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "455c1e2b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>tot_balls</th>\n",
       "      <th>wic_taken</th>\n",
       "      <th>overs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "      <th>Economy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Harbhajan Singh</td>\n",
       "      <td>3451</td>\n",
       "      <td>150</td>\n",
       "      <td>562.33</td>\n",
       "      <td>4050</td>\n",
       "      <td>157</td>\n",
       "      <td>7.202177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Mishra</td>\n",
       "      <td>3172</td>\n",
       "      <td>156</td>\n",
       "      <td>516.83</td>\n",
       "      <td>3850</td>\n",
       "      <td>147</td>\n",
       "      <td>7.449258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>PP Chawla</td>\n",
       "      <td>3157</td>\n",
       "      <td>149</td>\n",
       "      <td>520.83</td>\n",
       "      <td>4153</td>\n",
       "      <td>156</td>\n",
       "      <td>7.973811</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>R Ashwin</td>\n",
       "      <td>3016</td>\n",
       "      <td>125</td>\n",
       "      <td>487.33</td>\n",
       "      <td>3391</td>\n",
       "      <td>136</td>\n",
       "      <td>6.958324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2974</td>\n",
       "      <td>170</td>\n",
       "      <td>471.33</td>\n",
       "      <td>3511</td>\n",
       "      <td>122</td>\n",
       "      <td>7.449133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>DJ Hussey</td>\n",
       "      <td>323</td>\n",
       "      <td>8</td>\n",
       "      <td>52.83</td>\n",
       "      <td>485</td>\n",
       "      <td>26</td>\n",
       "      <td>9.180390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>CJ Anderson</td>\n",
       "      <td>315</td>\n",
       "      <td>11</td>\n",
       "      <td>49.50</td>\n",
       "      <td>532</td>\n",
       "      <td>22</td>\n",
       "      <td>10.747475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>ST Jayasuriya</td>\n",
       "      <td>301</td>\n",
       "      <td>13</td>\n",
       "      <td>49.00</td>\n",
       "      <td>396</td>\n",
       "      <td>21</td>\n",
       "      <td>8.081633</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>TM Dilshan</td>\n",
       "      <td>275</td>\n",
       "      <td>5</td>\n",
       "      <td>45.17</td>\n",
       "      <td>368</td>\n",
       "      <td>25</td>\n",
       "      <td>8.147000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>V Kohli</td>\n",
       "      <td>264</td>\n",
       "      <td>4</td>\n",
       "      <td>41.83</td>\n",
       "      <td>371</td>\n",
       "      <td>26</td>\n",
       "      <td>8.869233</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              bowler  tot_balls wic_taken   overs  total_runs  total_innings  \\\n",
       "0    Harbhajan Singh       3451       150  562.33        4050            157   \n",
       "1           A Mishra       3172       156  516.83        3850            147   \n",
       "2          PP Chawla       3157       149  520.83        4153            156   \n",
       "3           R Ashwin       3016       125  487.33        3391            136   \n",
       "4         SL Malinga       2974       170  471.33        3511            122   \n",
       "..               ...        ...       ...     ...         ...            ...   \n",
       "120        DJ Hussey        323         8   52.83         485             26   \n",
       "121      CJ Anderson        315        11   49.50         532             22   \n",
       "122    ST Jayasuriya        301        13   49.00         396             21   \n",
       "123       TM Dilshan        275         5   45.17         368             25   \n",
       "124          V Kohli        264         4   41.83         371             26   \n",
       "\n",
       "       Economy  \n",
       "0     7.202177  \n",
       "1     7.449258  \n",
       "2     7.973811  \n",
       "3     6.958324  \n",
       "4     7.449133  \n",
       "..         ...  \n",
       "120   9.180390  \n",
       "121  10.747475  \n",
       "122   8.081633  \n",
       "123   8.147000  \n",
       "124   8.869233  \n",
       "\n",
       "[125 rows x 7 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7babe758",
   "metadata": {},
   "outputs": [],
   "source": [
    "final['ability']=final['tot_balls']/final['wic_taken']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "cbd7ab24",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_ability = final.sort_values(by='ability')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "e056a2ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_ability=final_ability.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "9d70c46e",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_ability=final_ability[['bowler','ability']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "645ad0fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_ability=final_ability.head(10)\n",
    "final_ability.index = np.arange(1, len(final_ability) + 1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "ea524c1a",
   "metadata": {},
   "outputs": [],
   "source": [
    "wic_taker_names=final_ability['bowler'].to_list()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af30f8b5",
   "metadata": {},
   "source": [
    "# Consistency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "cf7092e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/80/x1svf9ms1zvcvb7klmk6nzlr0000gn/T/ipykernel_17775/3181864625.py:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n",
      "  consis=deliveries.groupby(['bowler'])['wide_runs','noball_runs','batsman_runs'].sum().reset_index()\n"
     ]
    }
   ],
   "source": [
    "consis=deliveries.groupby(['bowler'])['wide_runs','noball_runs','batsman_runs'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "d2064692",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>wide_runs</th>\n",
       "      <th>noball_runs</th>\n",
       "      <th>batsman_runs</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Ashish Reddy</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Chandila</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Choudhary</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>137</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Dananjaya</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A Flintoff</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>400</th>\n",
       "      <td>YA Abdulla</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>YK Pathan</td>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>1372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>402</th>\n",
       "      <td>YS Chahal</td>\n",
       "      <td>60</td>\n",
       "      <td>6</td>\n",
       "      <td>2300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>403</th>\n",
       "      <td>Yuvraj Singh</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>404</th>\n",
       "      <td>Z Khan</td>\n",
       "      <td>89</td>\n",
       "      <td>2</td>\n",
       "      <td>2691</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>405 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             bowler  wide_runs  noball_runs  batsman_runs\n",
       "0    A Ashish Reddy          8            2           386\n",
       "1        A Chandila          0            0           242\n",
       "2       A Choudhary          6            1           137\n",
       "3       A Dananjaya          1            0            47\n",
       "4        A Flintoff          0            0           105\n",
       "..              ...        ...          ...           ...\n",
       "400      YA Abdulla         12            1           294\n",
       "401       YK Pathan         43            0          1372\n",
       "402       YS Chahal         60            6          2300\n",
       "403    Yuvraj Singh         12            1          1065\n",
       "404          Z Khan         89            2          2691\n",
       "\n",
       "[405 rows x 4 columns]"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "consis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "8c424d1e",
   "metadata": {},
   "outputs": [],
   "source": [
    "consis = consis.eval('Sum = wide_runs + noball_runs + batsman_runs')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "4c6ae938",
   "metadata": {},
   "outputs": [],
   "source": [
    "consis=consis.drop(['wide_runs','noball_runs','batsman_runs'],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "d0ebaba4",
   "metadata": {},
   "outputs": [],
   "source": [
    "final = pd.merge(consis,final,on=['bowler'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "702baf4f",
   "metadata": {},
   "outputs": [],
   "source": [
    "final.rename(columns={'Sum':'run_conceded'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "29391dc5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>run_conceded</th>\n",
       "      <th>tot_balls</th>\n",
       "      <th>wic_taken</th>\n",
       "      <th>overs</th>\n",
       "      <th>total_runs</th>\n",
       "      <th>total_innings</th>\n",
       "      <th>Economy</th>\n",
       "      <th>ability</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>3390</td>\n",
       "      <td>2974</td>\n",
       "      <td>170</td>\n",
       "      <td>471.33</td>\n",
       "      <td>3511</td>\n",
       "      <td>122</td>\n",
       "      <td>7.449133</td>\n",
       "      <td>17.494118</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         bowler  run_conceded  tot_balls wic_taken   overs  total_runs  \\\n",
       "105  SL Malinga          3390       2974       170  471.33        3511   \n",
       "\n",
       "     total_innings   Economy    ability  \n",
       "105            122  7.449133  17.494118  "
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final[final['bowler']=='SL Malinga']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "39460a86",
   "metadata": {},
   "outputs": [],
   "source": [
    "final['concistency']=final['run_conceded']/final['wic_taken']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "475733ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_consis = final.sort_values(by='concistency')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "c7980006",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_consis = final_consis.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "2a1df8cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_consis=final_consis[['bowler','concistency']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "8e66ed19",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_consis=final_consis.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "2a4f3a8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "consis_bowler=final_consis['bowler'].to_list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "5900e478",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['DE Bollinger',\n",
       " 'S Gopal',\n",
       " 'SL Malinga',\n",
       " 'NM Coulter-Nile',\n",
       " 'MA Starc',\n",
       " 'Imran Tahir',\n",
       " 'AJ Tye',\n",
       " 'Rashid Khan',\n",
       " 'KK Cooper',\n",
       " 'MM Patel']"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "consis_bowler"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ba0732d",
   "metadata": {},
   "source": [
    "# Critical Wicket Taking Ability"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "3e3c87ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "bowler_innings=deliveries.groupby(['bowler','match_id'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "52397039",
   "metadata": {},
   "outputs": [],
   "source": [
    "bowler_innings=bowler_innings[bowler_innings['player_dismissed']>=4]"
   ]
  },
  {
   "cell_type": "raw",
   "id": "ee8fcad5",
   "metadata": {},
   "source": [
    "bowler_innings.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d46473e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>match_id</th>\n",
       "      <th>player_dismissed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7448</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>201</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7455</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>238</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7471</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>308</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7476</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>346</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7478</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>355</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7498</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>450</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7502</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>458</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7518</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>541</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7520</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>552</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7530</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>11322</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7533</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>11335</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          bowler  match_id player_dismissed\n",
       "7448  SL Malinga       201                4\n",
       "7455  SL Malinga       238                5\n",
       "7471  SL Malinga       308                4\n",
       "7476  SL Malinga       346                4\n",
       "7478  SL Malinga       355                4\n",
       "7498  SL Malinga       450                4\n",
       "7502  SL Malinga       458                4\n",
       "7518  SL Malinga       541                4\n",
       "7520  SL Malinga       552                4\n",
       "7530  SL Malinga     11322                5\n",
       "7533  SL Malinga     11335                4"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bowler_innings[bowler_innings['bowler']=='SL Malinga']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "508c38fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "Num_times_wic_taken=bowler_innings['bowler'].value_counts().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "c3c5f76b",
   "metadata": {},
   "outputs": [],
   "source": [
    "Num_times_wic_taken.rename(columns={'index':'bowler','bowler':'count'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "e940f44a",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability = pd.merge(Num_times_wic_taken,final,on=['bowler'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "744684f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability['crt_ability']=final_crt_ability['total_innings']/final_crt_ability['count']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "76dd784f",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability = final_crt_ability.sort_values(by='crt_ability')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "91b74dd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability.reset_index(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "69a9f439",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability=final_crt_ability[['bowler','crt_ability']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "dcf63e83",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_crt_ability=final_crt_ability.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "3a115875",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "final_crt_ability.index = np.arange(1, len(final_crt_ability) + 1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "2d011a3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "critical_names=final_crt_ability['bowler'].to_list()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a72bb206",
   "metadata": {},
   "source": [
    "# yearly economy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "70fb321d",
   "metadata": {},
   "outputs": [],
   "source": [
    "names=top_eco['bowler'].to_list()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "e17fb61b",
   "metadata": {},
   "outputs": [],
   "source": [
    "economy = deliveries[deliveries.bowler.isin(names)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "373c1589",
   "metadata": {},
   "outputs": [],
   "source": [
    "economy=economy.drop(economy[economy['is_super_over'] != 0].index) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "9909a516",
   "metadata": {},
   "outputs": [],
   "source": [
    "year=matches[['id','season']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "7ce55401",
   "metadata": {},
   "outputs": [],
   "source": [
    "runs=economy.groupby(['match_id','bowler'])['total_runs'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "3acfa176",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/80/x1svf9ms1zvcvb7klmk6nzlr0000gn/T/ipykernel_17775/340785580.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  year.rename(columns={'id':'match_id'},inplace=True)\n"
     ]
    }
   ],
   "source": [
    "year.rename(columns={'id':'match_id'},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "51ecf2ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly=pd.merge(runs,year,on=['match_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "f1bcce8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly=yearly.groupby(['bowler','season'])['total_runs'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "8691dcbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df=economy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "8e75d1a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df = new_df.drop(new_df[new_df.ball >= 7].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "87ad043a",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_df=new_df[['match_id','bowler','over','ball']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "a85001f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "new=pd.merge(new_df,year,on=['match_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "80341691",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled = new.groupby(['match_id', 'bowler'])['ball'].count().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "25466ca6",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled=pd.merge(num_balls_bowled,year,on=['match_id'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "01feff63",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled=num_balls_bowled.groupby(['bowler','season'])['ball'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "fa223a6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "top5=names[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "2b237e61",
   "metadata": {},
   "outputs": [],
   "source": [
    "top5next=names[5:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "a9d2a64f",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled['runs']=yearly['total_runs']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "29b5a1e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled['overs']=num_balls_bowled['ball']/6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "023c49c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled['overs']=num_balls_bowled['overs'].round(decimals=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "f531aa20",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled['economy']=num_balls_bowled['runs']/num_balls_bowled['overs']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "b2307339",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_balls_bowled=num_balls_bowled[['bowler','season','economy']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "39c83ce3",
   "metadata": {},
   "outputs": [],
   "source": [
    "eco1 = num_balls_bowled[num_balls_bowled.bowler.isin(top5)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "0b47158f",
   "metadata": {},
   "outputs": [],
   "source": [
    "eco2 = num_balls_bowled[num_balls_bowled.bowler.isin(top5next)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "f29952e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in eco1['bowler'].unique():\n",
    "    x = eco1[eco1['bowler'] == bowler]['season']\n",
    "    y = eco1[eco1['bowler'] == bowler]['economy']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('bowler economy')\n",
    "ax.set_title('bowler economy per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "abe5c76e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in eco2['bowler'].unique():\n",
    "    x = eco2[eco2['bowler'] == bowler]['season']\n",
    "    y = eco2[eco2['bowler'] == bowler]['economy']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('bowler economy')\n",
    "ax.set_title('bowler economy per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42c59f13",
   "metadata": {},
   "source": [
    "# yearly wicket taking \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "141cd374",
   "metadata": {},
   "outputs": [],
   "source": [
    "wicket = deliveries[deliveries.bowler.isin(wic_taker_names)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "51836859",
   "metadata": {},
   "outputs": [],
   "source": [
    "wicket = wicket.drop(wicket[wicket['dismissal_kind']=='run out'].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "10e86ae7",
   "metadata": {},
   "outputs": [],
   "source": [
    "wick_taken=wicket.groupby(['match_id','bowler'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "a5595ea0",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_wick_taken=pd.merge(wick_taken,year,on='match_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "09cc6a9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_wick_taken=yearly_wick_taken.groupby(['bowler','season'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "929f75ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "top5_w=wic_taker_names[0:4]\n",
    "top5next_w=wic_taker_names[4:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "29c718fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['NM Coulter-Nile',\n",
       " 'SL Malinga',\n",
       " 'S Aravind',\n",
       " 'A Singh',\n",
       " 'MA Starc',\n",
       " 'KK Cooper']"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top5next_w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "dc8eed92",
   "metadata": {},
   "outputs": [],
   "source": [
    "wic1 = yearly_wick_taken[yearly_wick_taken.bowler.isin(top5_w)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "12707171",
   "metadata": {},
   "outputs": [],
   "source": [
    "wic2 = yearly_wick_taken[yearly_wick_taken.bowler.isin(top5next_w)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "8315c775",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>season</th>\n",
       "      <th>player_dismissed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>2009</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>2011</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>2012</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Singh</td>\n",
       "      <td>2019</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>KK Cooper</td>\n",
       "      <td>2012</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>KK Cooper</td>\n",
       "      <td>2013</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>KK Cooper</td>\n",
       "      <td>2014</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>MA Starc</td>\n",
       "      <td>2014</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>MA Starc</td>\n",
       "      <td>2015</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>NM Coulter-Nile</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>NM Coulter-Nile</td>\n",
       "      <td>2014</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>NM Coulter-Nile</td>\n",
       "      <td>2015</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>NM Coulter-Nile</td>\n",
       "      <td>2016</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>NM Coulter-Nile</td>\n",
       "      <td>2017</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>S Aravind</td>\n",
       "      <td>2011</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>S Aravind</td>\n",
       "      <td>2012</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>S Aravind</td>\n",
       "      <td>2015</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>S Aravind</td>\n",
       "      <td>2016</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>S Aravind</td>\n",
       "      <td>2017</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2009</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2010</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2011</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2012</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2013</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2014</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2015</td>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2017</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2019</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             bowler  season player_dismissed\n",
       "0           A Singh    2009                9\n",
       "1           A Singh    2011                9\n",
       "2           A Singh    2012               10\n",
       "3           A Singh    2019                3\n",
       "16        KK Cooper    2012               10\n",
       "17        KK Cooper    2013               19\n",
       "18        KK Cooper    2014                4\n",
       "19         MA Starc    2014               14\n",
       "20         MA Starc    2015               20\n",
       "21  NM Coulter-Nile    2013                1\n",
       "22  NM Coulter-Nile    2014                2\n",
       "23  NM Coulter-Nile    2015               15\n",
       "24  NM Coulter-Nile    2016                3\n",
       "25  NM Coulter-Nile    2017               15\n",
       "26        S Aravind    2011               21\n",
       "27        S Aravind    2012                0\n",
       "28        S Aravind    2015                8\n",
       "29        S Aravind    2016               11\n",
       "30        S Aravind    2017                5\n",
       "36       SL Malinga    2009               18\n",
       "37       SL Malinga    2010               15\n",
       "38       SL Malinga    2011               28\n",
       "39       SL Malinga    2012               22\n",
       "40       SL Malinga    2013               20\n",
       "41       SL Malinga    2014               16\n",
       "42       SL Malinga    2015               24\n",
       "43       SL Malinga    2017               11\n",
       "44       SL Malinga    2019               16"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wic2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "251fb307",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 585.5x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot the count plot using seaborn\n",
    "sns.catplot(x='bowler', y='player_dismissed', hue='season', kind='bar', data=wic1)\n",
    "\n",
    "# Set the plot title and axis labels\n",
    "plt.title('Number of wickets by bowler')\n",
    "plt.xlabel('Bowler')\n",
    "plt.ylabel('Count')\n",
    "\n",
    "# Rotate the x-axis labels for better visibility\n",
    "plt.xticks(rotation=45)\n",
    "\n",
    "# Show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "14fe81d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in wic1['bowler'].unique():\n",
    "    x = wic1[wic1['bowler'] == bowler]['season']\n",
    "    y = wic1[wic1['bowler'] == bowler]['player_dismissed']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('wickets taken')\n",
    "ax.set_title('wickets taken per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "57a86d51",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "8a54b17a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in wic2['bowler'].unique():\n",
    "    x = wic2[wic2['bowler'] == bowler]['season']\n",
    "    y = wic2[wic2['bowler'] == bowler]['player_dismissed']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('wickets taken')\n",
    "ax.set_title('wickets taken per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e74ef0a9",
   "metadata": {},
   "source": [
    "# yearly consistency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "b97331db",
   "metadata": {},
   "outputs": [],
   "source": [
    "cons=deliveries[deliveries.bowler.isin(consis_bowler)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "77536148",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/80/x1svf9ms1zvcvb7klmk6nzlr0000gn/T/ipykernel_17775/3869848787.py:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.\n",
      "  yearly_cons=cons.groupby(['match_id','bowler'])['wide_runs','noball_runs','batsman_runs'].sum().reset_index()\n"
     ]
    }
   ],
   "source": [
    "yearly_cons=cons.groupby(['match_id','bowler'])['wide_runs','noball_runs','batsman_runs'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "a1339bc0",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons = yearly_cons.eval('Sum = wide_runs + noball_runs + batsman_runs')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "323fb9fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons = yearly_cons[['match_id','bowler','Sum']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "51ac6e8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons = pd.merge(yearly_cons,year,on='match_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "0696ded6",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons = yearly_cons.groupby(['bowler','season'])['Sum'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "0a2d51e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "wicket_cons = deliveries[deliveries.bowler.isin(consis_bowler)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "6f05b392",
   "metadata": {},
   "outputs": [],
   "source": [
    "wicket_cons = wicket_cons.drop(wicket_cons[wicket_cons['dismissal_kind']=='run out'].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "91fab95f",
   "metadata": {},
   "outputs": [],
   "source": [
    "wick_taken_cons=wicket_cons.groupby(['match_id','bowler'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "37f516bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_wick_taken_cons=pd.merge(wick_taken_cons,year,on='match_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "a1de9c52",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_wick_taken_cons=yearly_wick_taken_cons.groupby(['bowler','season'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "2e770883",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons['player_dismissed']=yearly_wick_taken_cons['player_dismissed']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "26dc8544",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons = yearly_cons.drop(yearly_cons[yearly_cons.player_dismissed == 0].index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "2b5b7f42",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons['consistency']=yearly_cons['Sum']/yearly_cons['player_dismissed']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "5d7ec049",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_cons=yearly_cons[['bowler','season','consistency']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "fa5feb65",
   "metadata": {},
   "outputs": [],
   "source": [
    "top5_c=consis_bowler[0:5]\n",
    "top5next_c=consis_bowler[5:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "541adc77",
   "metadata": {},
   "outputs": [],
   "source": [
    "con1 = yearly_cons[yearly_cons.bowler.isin(top5_c)]\n",
    "con2 = yearly_cons[yearly_cons.bowler.isin(top5next_c)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "37d7b467",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in con1['bowler'].unique():\n",
    "    x = con1[con1['bowler'] == bowler]['season']\n",
    "    y = con1[con1['bowler'] == bowler]['consistency']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('consistency')\n",
    "ax.set_title('consistency per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "4cb2b282",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in con2['bowler'].unique():\n",
    "    x = con2[con2['bowler'] == bowler]['season']\n",
    "    y = con2[con2['bowler'] == bowler]['consistency']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('consistency')\n",
    "ax.set_title('consistency per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8cadb68d",
   "metadata": {},
   "source": [
    "# yearly critical wickets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "6b12c796",
   "metadata": {},
   "outputs": [],
   "source": [
    "crit = deliveries[deliveries.bowler.isin(critical_names)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "a72e79bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "bowler_innings=crit.groupby(['match_id','bowler'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "8f3dd450",
   "metadata": {},
   "outputs": [],
   "source": [
    "bowler_innings=bowler_innings[bowler_innings['player_dismissed']>=4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "5ba3836d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match_id</th>\n",
       "      <th>bowler</th>\n",
       "      <th>player_dismissed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13</td>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>34</td>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>38</td>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>119</td>\n",
       "      <td>A Kumble</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>147</td>\n",
       "      <td>RG Sharma</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>155</td>\n",
       "      <td>RG Sharma</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>160</td>\n",
       "      <td>MM Patel</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>174</td>\n",
       "      <td>A Kumble</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>184</td>\n",
       "      <td>A Kumble</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>201</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>232</td>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>233</td>\n",
       "      <td>A Kumble</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>238</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>287</td>\n",
       "      <td>MM Patel</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>308</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>316</td>\n",
       "      <td>MM Patel</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>319</td>\n",
       "      <td>MM Patel</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>320</td>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>325</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>346</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>355</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>357</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>370</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>382</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>410</td>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>416</td>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>441</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>449</td>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>450</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>458</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>458</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>476</td>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>506</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>508</td>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>523</td>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>541</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>552</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>554</td>\n",
       "      <td>MA Starc</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>557</td>\n",
       "      <td>MA Starc</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>560</td>\n",
       "      <td>SP Narine</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>7933</td>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>7937</td>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>7943</td>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>11320</td>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>11322</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>11335</td>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>11341</td>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    match_id        bowler player_dismissed\n",
       "0         13        AJ Tye                5\n",
       "1         34   JP Faulkner                4\n",
       "2         38   Imran Tahir                4\n",
       "3        119      A Kumble                5\n",
       "4        147     RG Sharma                4\n",
       "5        155     RG Sharma                4\n",
       "6        160      MM Patel                4\n",
       "7        174      A Kumble                4\n",
       "8        184      A Kumble                5\n",
       "9        201    SL Malinga                4\n",
       "10       232  DE Bollinger                4\n",
       "11       233      A Kumble                4\n",
       "12       238    SL Malinga                5\n",
       "13       287      MM Patel                5\n",
       "14       308    SL Malinga                4\n",
       "15       316      MM Patel                4\n",
       "16       319      MM Patel                4\n",
       "17       320  DE Bollinger                4\n",
       "18       325     SP Narine                5\n",
       "19       346    SL Malinga                4\n",
       "20       355    SL Malinga                4\n",
       "21       357     SP Narine                5\n",
       "22       370     SP Narine                4\n",
       "23       382     SP Narine                5\n",
       "24       410   JP Faulkner                4\n",
       "25       416   JP Faulkner                5\n",
       "26       441     SP Narine                4\n",
       "27       449   JP Faulkner                5\n",
       "28       450    SL Malinga                4\n",
       "29       458    SL Malinga                4\n",
       "30       458     SP Narine                4\n",
       "31       476   JP Faulkner                5\n",
       "32       506     SP Narine                4\n",
       "33       508   Imran Tahir                4\n",
       "34       523   Imran Tahir                4\n",
       "35       541    SL Malinga                4\n",
       "36       552    SL Malinga                4\n",
       "37       554      MA Starc                4\n",
       "38       557      MA Starc                4\n",
       "39       560     SP Narine                4\n",
       "40      7933        AJ Tye                5\n",
       "41      7937        AJ Tye                4\n",
       "42      7943        AJ Tye                4\n",
       "43     11320   Imran Tahir                4\n",
       "44     11322    SL Malinga                5\n",
       "45     11335    SL Malinga                4\n",
       "46     11341   Imran Tahir                4"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bowler_innings.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "48b92cad",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_bowler_innings=pd.merge(bowler_innings,year,on='match_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "25ceb972",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_bowler_innings['player_dismissed']=yearly_bowler_innings['player_dismissed'].replace(4,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "de48b3a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_bowler_innings['player_dismissed']=yearly_bowler_innings['player_dismissed'].replace(5,1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "4af5ea8d",
   "metadata": {},
   "outputs": [],
   "source": [
    "yearly_bowler_innings=yearly_bowler_innings.groupby(['bowler','season'])['player_dismissed'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "d187f926",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>season</th>\n",
       "      <th>player_dismissed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>A Kumble</td>\n",
       "      <td>2009</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>A Kumble</td>\n",
       "      <td>2010</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AJ Tye</td>\n",
       "      <td>2018</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>2010</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>2012</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>2014</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Imran Tahir</td>\n",
       "      <td>2019</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2014</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>MA Starc</td>\n",
       "      <td>2015</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2011</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>RG Sharma</td>\n",
       "      <td>2009</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2010</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2011</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2014</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2015</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>SL Malinga</td>\n",
       "      <td>2019</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2013</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2014</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          bowler  season  player_dismissed\n",
       "0       A Kumble    2009                 2\n",
       "1       A Kumble    2010                 2\n",
       "2         AJ Tye    2017                 1\n",
       "3         AJ Tye    2018                 3\n",
       "4   DE Bollinger    2010                 1\n",
       "5   DE Bollinger    2012                 1\n",
       "6    Imran Tahir    2014                 1\n",
       "7    Imran Tahir    2015                 1\n",
       "8    Imran Tahir    2017                 1\n",
       "9    Imran Tahir    2019                 2\n",
       "10   JP Faulkner    2013                 3\n",
       "11   JP Faulkner    2014                 1\n",
       "12   JP Faulkner    2017                 1\n",
       "13      MA Starc    2015                 2\n",
       "14      MM Patel    2009                 1\n",
       "15      MM Patel    2011                 1\n",
       "16      MM Patel    2012                 2\n",
       "17     RG Sharma    2009                 2\n",
       "18    SL Malinga    2010                 1\n",
       "19    SL Malinga    2011                 1\n",
       "20    SL Malinga    2012                 3\n",
       "21    SL Malinga    2013                 1\n",
       "22    SL Malinga    2014                 1\n",
       "23    SL Malinga    2015                 2\n",
       "24    SL Malinga    2019                 2\n",
       "25     SP Narine    2012                 3\n",
       "26     SP Narine    2013                 2\n",
       "27     SP Narine    2014                 2\n",
       "28     SP Narine    2015                 1"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yearly_bowler_innings\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "057569ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "top5_cr=critical_names[0:4]\n",
    "top5next_cr=critical_names[4:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "4c8a0abd",
   "metadata": {},
   "outputs": [],
   "source": [
    "crt1 = yearly_bowler_innings[yearly_bowler_innings.bowler.isin(top5_cr)]\n",
    "crt2 = yearly_bowler_innings[yearly_bowler_innings.bowler.isin(top5next_cr)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "b49a4900",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in crt1['bowler'].unique():\n",
    "    x = crt1[crt1['bowler'] == bowler]['season']\n",
    "    y = crt1[crt1['bowler'] == bowler]['player_dismissed']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('Num of time crtical wicket taken')\n",
    "ax.set_title('Num of time crtical wicket taken per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "94025d6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a figure and axis object\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "# Iterate over each batsman, plot their runs by season, and label the line with their name\n",
    "for bowler in crt2['bowler'].unique():\n",
    "    x = crt2[crt2['bowler'] == bowler]['season']\n",
    "    y = crt2[crt2['bowler'] == bowler]['player_dismissed']\n",
    "    ax.plot(x, y, label=bowler)\n",
    "\n",
    "# Set the x-axis label, y-axis label, and title\n",
    "ax.set_xlabel('Season')\n",
    "ax.set_ylabel('Num of time crtical wicket taken')\n",
    "ax.set_title('Num of time crtical wicket taken per Season in IPL')\n",
    "\n",
    "# Add a legend\n",
    "ax.legend()\n",
    "\n",
    "# Display the graph\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "9665599d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bowler</th>\n",
       "      <th>season</th>\n",
       "      <th>player_dismissed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>2010</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>DE Bollinger</td>\n",
       "      <td>2012</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2013</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2014</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>JP Faulkner</td>\n",
       "      <td>2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>MA Starc</td>\n",
       "      <td>2015</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2011</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>MM Patel</td>\n",
       "      <td>2012</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>RG Sharma</td>\n",
       "      <td>2009</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2012</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2013</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2014</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>SP Narine</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          bowler  season  player_dismissed\n",
       "4   DE Bollinger    2010                 1\n",
       "5   DE Bollinger    2012                 1\n",
       "10   JP Faulkner    2013                 3\n",
       "11   JP Faulkner    2014                 1\n",
       "12   JP Faulkner    2017                 1\n",
       "13      MA Starc    2015                 2\n",
       "14      MM Patel    2009                 1\n",
       "15      MM Patel    2011                 1\n",
       "16      MM Patel    2012                 2\n",
       "17     RG Sharma    2009                 2\n",
       "25     SP Narine    2012                 3\n",
       "26     SP Narine    2013                 2\n",
       "27     SP Narine    2014                 2\n",
       "28     SP Narine    2015                 1"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crt2\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
